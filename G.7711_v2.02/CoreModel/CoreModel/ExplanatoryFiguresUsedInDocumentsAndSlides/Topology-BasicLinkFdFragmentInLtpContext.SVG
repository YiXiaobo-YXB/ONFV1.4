<?xml version="1.0" encoding="UTF-8"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" stroke-dasharray="none" shape-rendering="auto" font-family="'Dialog'" width="937" text-rendering="auto" fill-opacity="1" contentScriptType="text/ecmascript" color-interpolation="auto" color-rendering="auto" preserveAspectRatio="xMidYMid meet" font-size="12" viewBox="0 0 937 483" fill="black" stroke="black" image-rendering="auto" stroke-miterlimit="10" zoomAndPan="magnify" version="1.0" stroke-linecap="square" stroke-linejoin="miter" contentStyleType="text/css" font-style="normal" height="483" stroke-width="1" stroke-dashoffset="0" font-weight="normal" stroke-opacity="1">
<!--Generated by the Batik Graphics2D SVG Generator-->
<defs id="genericDefs"/>
<g>
<defs id="defs1">
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath1">
<path d="M22 22 L64 22 L64 64 L22 64 L22 22 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath2">
<path d="M254 162 L448 162 L448 180 L254 180 L254 162 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath3">
<path d="M-1 -1 L938 -1 L938 484 L-1 484 L-1 -1 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath4">
<path d="M504 358 L698 358 L698 376 L504 376 L504 358 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath5">
<path d="M232 358 L426 358 L426 376 L232 376 L232 358 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath6">
<path d="M712 294 L906 294 L906 312 L712 312 L712 294 Z"/>
</clipPath>
</defs>
<g fill="rgb(255,203,203)" font-family="'Segoe UI'" stroke-linejoin="round" stroke="rgb(255,203,203)" stroke-width="0" stroke-miterlimit="0">
<rect width="236" x="691" height="76" y="147" stroke="none"/>
</g>
<g stroke-linecap="butt" font-family="'Segoe UI'">
<rect fill="none" width="235" x="691" height="75" y="147"/>
<text xml:space="preserve" x="712" y="190" stroke="none">Invalid view - remove from diagram.</text>
<rect x="171" y="402" fill="rgb(255,203,203)" width="215" height="71" stroke="none"/>
<rect x="171" y="402" fill="none" width="214" height="70" stroke-width="0.1"/>
<text xml:space="preserve" x="182" stroke-width="0.1" y="443" stroke="none">Invalid view - remove from diagram.</text>
<rect x="671" y="337" fill="rgb(255,203,203)" width="123" height="61" stroke="none" stroke-width="0.1"/>
<rect x="671" y="337" fill="none" width="122" height="60" stroke-width="0.1"/>
<text xml:space="preserve" x="636" stroke-width="0.1" y="373" stroke="none">Invalid view - remove from diagram.</text>
<rect x="416" y="337" fill="rgb(255,203,203)" width="115" height="61" stroke="none" stroke-width="0.1"/>
<rect x="416" y="337" fill="none" width="114" height="60" stroke-width="0.1"/>
<text xml:space="preserve" x="377" stroke-width="0.1" y="373" stroke="none">Invalid view - remove from diagram.</text>
<line fill="none" x1="691" x2="259" y1="171" y2="171" stroke="red" stroke-width="1.1"/>
<line fill="none" x1="259" x2="259" y1="171" y2="194" stroke="red" stroke-width="1.1"/>
<line fill="none" x1="259" x2="275" y1="194" y2="194" stroke="red" stroke-width="1.1"/>
<line fill="none" x1="275" x2="275" y1="194" y2="402" stroke="red" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="255" y="176" clip-path="url(#clipPath2)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="531" x2="671" y1="367" y2="367" stroke="red" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="505" y="372" clip-path="url(#clipPath4)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="416" x2="278" y1="367" y2="367" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="278" x2="278" y1="367" y2="402" stroke="red" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="233" y="372" clip-path="url(#clipPath5)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="809" x2="809" y1="223" y2="367" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="809" x2="794" y1="367" y2="367" stroke="red" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-54" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="713" y="308" clip-path="url(#clipPath6)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
</g>
</g>
<rect x="691" y="147" fill-opacity="0" width="236" title="The ForwardingDomain (FD) class models the topological component that represents a forwarding capability that provides the opportunity to enable forwarding (of specific transport characteristic information at one or more protocol layers) between points.&#13;&#10;The FD object provides the context for and constrains the formation, adjustment and removal of FCs and hence offers the potential to enable forwarding.&#13;&#10;The FCs may be formed between LTPs at the boundary of the FD or between physical ports at the boundary of the FD (for media layers).&#13;&#10;A number of FDs (related by Links) may be grouped and abstracted to form an FD where that FD represents the effect of the underlying FDs but where the detailed structure is not apparent.&#13;&#10;This grouping and abstraction is potentially recursive.&#13;&#10;An FD represents an abstraction of some combination of software behavior, electronic behavior and physical structure that provides a forwarding capability. &#13;&#10;At a lower level of recursion an FD could represent a forwarding capability within a device. &#13;&#10;A device may encompass two or more disjoint forwarding capabilities and may support more than one layer protocol, hence more than one FD.&#13;&#10;A routing fabric may be logically partitioned to represent connectivity constraints, hence the FD representing the routing fabric may be partitioned into a number of FDs representing the constraints.&#13;&#10;The FD represents a subnetwork [ITU-T G.800], FlowDomain [TMF 612] and a MultiLayerSubNetwork (MLSN) [TMF 612]. &#13;&#10;As in the TMF concept of MLSN the FD can support more than one layer-protocol.&#13;&#10;Note that the ITU-T G.800 subnetwork is a single layer entity." id="ForwardingDomain" height="76" stroke-opacity="0">
<title>The ForwardingDomain (FD) class models the topological component that represents a forwarding capability that provides the opportunity to enable forwarding (of specific transport characteristic information at one or more protocol layers) between points.&#13;
The FD object provides the context for and constrains the formation, adjustment and removal of FCs and hence offers the potential to enable forwarding.&#13;
The FCs may be formed between LTPs at the boundary of the FD or between physical ports at the boundary of the FD (for media layers).&#13;
A number of FDs (related by Links) may be grouped and abstracted to form an FD where that FD represents the effect of the underlying FDs but where the detailed structure is not apparent.&#13;
This grouping and abstraction is potentially recursive.&#13;
An FD represents an abstraction of some combination of software behavior, electronic behavior and physical structure that provides a forwarding capability. &#13;
At a lower level of recursion an FD could represent a forwarding capability within a device. &#13;
A device may encompass two or more disjoint forwarding capabilities and may support more than one layer protocol, hence more than one FD.&#13;
A routing fabric may be logically partitioned to represent connectivity constraints, hence the FD representing the routing fabric may be partitioned into a number of FDs representing the constraints.&#13;
The FD represents a subnetwork [ITU-T G.800], FlowDomain [TMF 612] and a MultiLayerSubNetwork (MLSN) [TMF 612]. &#13;
As in the TMF concept of MLSN the FD can support more than one layer-protocol.&#13;
Note that the ITU-T G.800 subnetwork is a single layer entity.</title>
</rect>
<rect x="171" y="402" fill-opacity="0" width="215" title="The LogicalTerminationPoint (LTP) class encapsulates the termination and adaptation functions of one or more transport layers represented by instances of LayerProtocol.&#13;&#10;The encapsulated transport layers have a simple fixed 1:1 client-server relationship defined by association end ordering.&#13;&#10;The structure of LTP supports all transport protocols including circuit and packet forms." id="LogicalTerminationPoint" height="71" stroke-opacity="0">
<title>The LogicalTerminationPoint (LTP) class encapsulates the termination and adaptation functions of one or more transport layers represented by instances of LayerProtocol.&#13;
The encapsulated transport layers have a simple fixed 1:1 client-server relationship defined by association end ordering.&#13;
The structure of LTP supports all transport protocols including circuit and packet forms.</title>
</rect>
<rect x="671" y="337" fill-opacity="0" width="123" title="The Link class models effective adjacency between two or more ForwardingDomains (FD). &#13;&#10;For digital layer networks, in its basic form (i.e., point-to-point Link) it associates a set of LTP clients on one FD with an equivalent set of LTP clients on another FD. &#13;&#10;Like the FC, the Link has ports (LinkPort) which take roles relevant to the constraints on flows offered by the Link (e.g., Root role or leaf role for a Link that has a constrained Tree configuration)." id="Link" height="61" stroke-opacity="0">
<title>The Link class models effective adjacency between two or more ForwardingDomains (FD). &#13;
For digital layer networks, in its basic form (i.e., point-to-point Link) it associates a set of LTP clients on one FD with an equivalent set of LTP clients on another FD. &#13;
Like the FC, the Link has ports (LinkPort) which take roles relevant to the constraints on flows offered by the Link (e.g., Root role or leaf role for a Link that has a constrained Tree configuration).</title>
</rect>
<rect x="416" y="337" fill-opacity="0" width="115" title="The association of the Link to LTPs is made via LinkPort.&#13;&#10;The LinkPort class models the access to the Link function. &#13;&#10;The traffic forwarding between the associated LinkPorts of the Link depends upon the type of Link.  &#13;&#10;In cases where there is resilience, the LinkPort may convey the resilience role of the access to the Link. &#13;&#10;The Link can be considered as a component and the LinkPort as a Port on that component." id="LinkPort" height="61" stroke-opacity="0">
<title>The association of the Link to LTPs is made via LinkPort.&#13;
The LinkPort class models the access to the Link function. &#13;
The traffic forwarding between the associated LinkPorts of the Link depends upon the type of Link.  &#13;
In cases where there is resilience, the LinkPort may convey the resilience role of the access to the Link. &#13;
The Link can be considered as a component and the LinkPort as a Port on that component.</title>
</rect>
</svg>
