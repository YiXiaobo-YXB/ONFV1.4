<?xml version="1.0" encoding="UTF-8"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" stroke-dasharray="none" shape-rendering="auto" font-family="'Dialog'" width="874" text-rendering="auto" fill-opacity="1" contentScriptType="text/ecmascript" color-interpolation="auto" color-rendering="auto" preserveAspectRatio="xMidYMid meet" font-size="12" viewBox="0 0 874 534" fill="black" stroke="black" image-rendering="auto" stroke-miterlimit="10" zoomAndPan="magnify" version="1.0" stroke-linecap="square" stroke-linejoin="miter" contentStyleType="text/css" font-style="normal" height="534" stroke-width="1" stroke-dashoffset="0" font-weight="normal" stroke-opacity="1">
<!--Generated by the Batik Graphics2D SVG Generator-->
<defs id="genericDefs"/>
<g>
<defs id="defs1">
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath1">
<path d="M77 409 L119 409 L119 451 L77 451 L77 409 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath2">
<path d="M621 232 L815 232 L815 250 L621 250 L621 232 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath3">
<path d="M-1 -1 L875 -1 L875 535 L-1 535 L-1 -1 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath4">
<path d="M488 286 L682 286 L682 304 L488 304 L488 286 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath5">
<path d="M658 346 L852 346 L852 364 L658 364 L658 346 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath6">
<path d="M155 153 L349 153 L349 171 L155 171 L155 153 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath7">
<path d="M253 280 L447 280 L447 298 L253 298 L253 280 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath8">
<path d="M441 406 L635 406 L635 424 L441 424 L441 406 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath9">
<path d="M22 334 L216 334 L216 352 L22 352 L22 334 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath10">
<path d="M529 100 L723 100 L723 118 L529 118 L529 100 Z"/>
</clipPath>
</defs>
<g fill="rgb(255,203,203)" font-family="'Segoe UI'" stroke-linejoin="round" stroke="rgb(255,203,203)" stroke-width="0" stroke-miterlimit="0">
<rect width="236" x="553" height="76" y="140" stroke="none"/>
</g>
<g stroke-linecap="butt" font-family="'Segoe UI'">
<rect fill="none" width="235" x="553" height="75" y="140"/>
<text xml:space="preserve" x="574" y="183" stroke="none">Invalid view - remove from diagram.</text>
<rect x="683" y="275" fill="rgb(255,203,203)" width="146" height="56" stroke="none"/>
<rect x="683" y="275" fill="none" width="145" height="55" stroke-width="0.1"/>
<text xml:space="preserve" x="659" stroke-width="0.1" y="308" stroke="none">Invalid view - remove from diagram.</text>
<rect x="38" y="245" fill="rgb(255,203,203)" width="215" height="71" stroke="none" stroke-width="0.1"/>
<rect x="38" y="245" fill="none" width="214" height="70" stroke-width="0.1"/>
<text xml:space="preserve" x="49" stroke-width="0.1" y="286" stroke="none">Invalid view - remove from diagram.</text>
<rect x="448" y="275" fill="rgb(255,203,203)" width="40" height="56" stroke="none" stroke-width="0.1"/>
<rect x="448" y="275" fill="none" width="39" height="55" stroke-width="0.1"/>
<text xml:space="preserve" x="371" stroke-width="0.1" y="308" stroke="none">Invalid view - remove from diagram.</text>
<rect x="703" y="380" fill="rgb(255,203,203)" width="40" height="70" stroke="none" stroke-width="0.1"/>
<rect x="703" y="380" fill="none" width="39" height="69" stroke-width="0.1"/>
<text xml:space="preserve" x="626" stroke-width="0.1" y="420" stroke="none">Invalid view - remove from diagram.</text>
<rect x="83" y="380" fill="rgb(255,203,203)" width="40" height="51" stroke="none" stroke-width="0.1"/>
<rect x="83" y="380" fill="none" width="39" height="50" stroke-width="0.1"/>
<text xml:space="preserve" x="6" stroke-width="0.1" y="411" stroke="none">Invalid view - remove from diagram.</text>
<rect x="568" y="10" fill="rgb(255,203,203)" width="40" height="61" stroke="none" stroke-width="0.1"/>
<rect x="568" y="10" fill="none" width="39" height="60" stroke-width="0.1"/>
<text xml:space="preserve" x="491" stroke-width="0.1" y="46" stroke="none">Invalid view - remove from diagram.</text>
<line fill="none" x1="756" x2="756" y1="275" y2="241" stroke="red" stroke-width="1.1"/>
<line fill="none" x1="756" x2="671" y1="241" y2="241" stroke="red" stroke-width="1.1"/>
<line fill="none" x1="671" x2="671" y1="241" y2="216" stroke="red" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="622" y="246" clip-path="url(#clipPath2)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="683" x2="488" y1="295" y2="295" stroke="red" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="489" y="300" clip-path="url(#clipPath4)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="788" x2="788" y1="331" y2="355" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="788" x2="724" y1="355" y2="355" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="724" x2="724" y1="355" y2="380" stroke="red" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="659" y="360" clip-path="url(#clipPath5)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="553" x2="133" y1="162" y2="162" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="133" x2="133" y1="162" y2="117" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="133" x2="142" y1="117" y2="117" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="142" x2="142" y1="117" y2="245" stroke="red" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="156" y="167" clip-path="url(#clipPath6)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="448" x2="350" y1="300" y2="300" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="350" x2="350" y1="300" y2="278" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="350" x2="253" y1="278" y2="278" stroke="red" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="254" y="294" clip-path="url(#clipPath7)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="703" x2="478" y1="415" y2="415" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="478" x2="478" y1="415" y2="420" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="478" x2="468" y1="420" y2="420" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="468" x2="468" y1="420" y2="331" stroke="red" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="442" y="420" clip-path="url(#clipPath8)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="145" x2="145" y1="316" y2="343" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="145" x2="103" y1="343" y2="343" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="103" x2="103" y1="343" y2="380" stroke="red" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="23" y="348" clip-path="url(#clipPath9)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="671" x2="671" y1="140" y2="109" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="671" x2="588" y1="109" y2="109" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="588" x2="588" y1="109" y2="71" stroke="red" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="78" y="410" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="1" y="435" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="530" y="114" clip-path="url(#clipPath10)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
</g>
</g>
<rect x="553" y="140" fill-opacity="0" width="236" title="The ForwardingDomain (FD) class models the topological component that represents a forwarding capability that provides the opportunity to enable forwarding (of specific transport characteristic information at one or more protocol layers) between points.&#13;&#10;The FD object provides the context for and constrains the formation, adjustment and removal of FCs and hence offers the potential to enable forwarding.&#13;&#10;The FCs may be formed between LTPs at the boundary of the FD or between physical ports at the boundary of the FD (for media layers).&#13;&#10;A number of FDs (related by Links) may be grouped and abstracted to form an FD where that FD represents the effect of the underlying FDs but where the detailed structure is not apparent.&#13;&#10;This grouping and abstraction is potentially recursive.&#13;&#10;An FD represents an abstraction of some combination of software behavior, electronic behavior and physical structure that provides a forwarding capability. &#13;&#10;At a lower level of recursion an FD could represent a forwarding capability within a device. &#13;&#10;A device may encompass two or more disjoint forwarding capabilities and may support more than one layer protocol, hence more than one FD.&#13;&#10;A routing fabric may be logically partitioned to represent connectivity constraints, hence the FD representing the routing fabric may be partitioned into a number of FDs representing the constraints.&#13;&#10;The FD represents a subnetwork [ITU-T G.800], FlowDomain [TMF 612] and a MultiLayerSubNetwork (MLSN) [TMF 612]. &#13;&#10;As in the TMF concept of MLSN the FD can support more than one layer-protocol.&#13;&#10;Note that the ITU-T G.800 subnetwork is a single layer entity." id="ForwardingDomain" height="76" stroke-opacity="0">
<title>The ForwardingDomain (FD) class models the topological component that represents a forwarding capability that provides the opportunity to enable forwarding (of specific transport characteristic information at one or more protocol layers) between points.&#13;
The FD object provides the context for and constrains the formation, adjustment and removal of FCs and hence offers the potential to enable forwarding.&#13;
The FCs may be formed between LTPs at the boundary of the FD or between physical ports at the boundary of the FD (for media layers).&#13;
A number of FDs (related by Links) may be grouped and abstracted to form an FD where that FD represents the effect of the underlying FDs but where the detailed structure is not apparent.&#13;
This grouping and abstraction is potentially recursive.&#13;
An FD represents an abstraction of some combination of software behavior, electronic behavior and physical structure that provides a forwarding capability. &#13;
At a lower level of recursion an FD could represent a forwarding capability within a device. &#13;
A device may encompass two or more disjoint forwarding capabilities and may support more than one layer protocol, hence more than one FD.&#13;
A routing fabric may be logically partitioned to represent connectivity constraints, hence the FD representing the routing fabric may be partitioned into a number of FDs representing the constraints.&#13;
The FD represents a subnetwork [ITU-T G.800], FlowDomain [TMF 612] and a MultiLayerSubNetwork (MLSN) [TMF 612]. &#13;
As in the TMF concept of MLSN the FD can support more than one layer-protocol.&#13;
Note that the ITU-T G.800 subnetwork is a single layer entity.</title>
</rect>
<rect x="683" y="275" fill-opacity="0" width="146" title="The ForwardingConstruct (FC) class models enabled constrained potential for forwarding between two or more FcPorts at a particular specific layerProtocol .&#13;&#10;Like the LTP, the FC supports any transport protocol including all analogue, circuit and packet forms.&#13;&#10;For digital layer networks it is used to effect forwarding of transport characteristic (layer protocol) information.&#13;&#10;An FC can be in only one ForwardingDomain (FD).&#13;&#10;The FC is a forwarding entity.&#13;&#10;At a low level of the recursion, a FC represents a cross-connection within an NE. It may also represent a fragment of a cross-connection under certain circumstances.&#13;&#10;The FC object can be used to represent many different structures including point-to-point (P2P), point-to-multipoint (P2MP), rooted-multipoint (RMP) and multipoint-to-multipoint (MP2MP) bridge and selector structures for linear, ring or mesh protection schemes.&#13;&#10;When applied to media, the FC represents the ability for a flow/wave (potentially containing information), to be propagated between FcPorts. &#13;&#10;The existence of a FC instance is independent of the presence (or absence) of a flow/wave (and any information encoded within it).  &#13;&#10;A flow/wave cannot propagate in the absence of a FC instance." id="ForwardingConstruct" height="56" stroke-opacity="0">
<title>The ForwardingConstruct (FC) class models enabled constrained potential for forwarding between two or more FcPorts at a particular specific layerProtocol .&#13;
Like the LTP, the FC supports any transport protocol including all analogue, circuit and packet forms.&#13;
For digital layer networks it is used to effect forwarding of transport characteristic (layer protocol) information.&#13;
An FC can be in only one ForwardingDomain (FD).&#13;
The FC is a forwarding entity.&#13;
At a low level of the recursion, a FC represents a cross-connection within an NE. It may also represent a fragment of a cross-connection under certain circumstances.&#13;
The FC object can be used to represent many different structures including point-to-point (P2P), point-to-multipoint (P2MP), rooted-multipoint (RMP) and multipoint-to-multipoint (MP2MP) bridge and selector structures for linear, ring or mesh protection schemes.&#13;
When applied to media, the FC represents the ability for a flow/wave (potentially containing information), to be propagated between FcPorts. &#13;
The existence of a FC instance is independent of the presence (or absence) of a flow/wave (and any information encoded within it).  &#13;
A flow/wave cannot propagate in the absence of a FC instance.</title>
</rect>
<rect x="38" y="245" fill-opacity="0" width="215" title="The LogicalTerminationPoint (LTP) class encapsulates the termination and adaptation functions of one or more transport layers represented by instances of LayerProtocol.&#13;&#10;The encapsulated transport layers have a simple fixed 1:1 client-server relationship defined by association end ordering.&#13;&#10;The structure of LTP supports all transport protocols including circuit and packet forms." id="LogicalTerminationPoint" height="71" stroke-opacity="0">
<title>The LogicalTerminationPoint (LTP) class encapsulates the termination and adaptation functions of one or more transport layers represented by instances of LayerProtocol.&#13;
The encapsulated transport layers have a simple fixed 1:1 client-server relationship defined by association end ordering.&#13;
The structure of LTP supports all transport protocols including circuit and packet forms.</title>
</rect>
<rect x="448" y="275" fill-opacity="0" width="40" title="The association of the FC to LTPs is always made via FcPorts.&#13;&#10;In the case of media the association between FCs is made via their FcPorts and the association of an FC to the physical Pin is made via the FcPort.&#13;&#10;The FcPort class models the access to the FC function. &#13;&#10;The traffic forwarding between the associated FcPorts of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  &#13;&#10;In cases where there is resilience, the FcPort may convey the resilience role of the access to the FC. &#13;&#10;It can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.&#13;&#10;The FcPort replaces the Protection Unit of a traditional protection model. &#13;&#10;The ForwardingConstruct can be considered as a component and the FcPort as a Port on that component." id="FcPort" height="56" stroke-opacity="0">
<title>The association of the FC to LTPs is always made via FcPorts.&#13;
In the case of media the association between FCs is made via their FcPorts and the association of an FC to the physical Pin is made via the FcPort.&#13;
The FcPort class models the access to the FC function. &#13;
The traffic forwarding between the associated FcPorts of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  &#13;
In cases where there is resilience, the FcPort may convey the resilience role of the access to the FC. &#13;
It can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.&#13;
The FcPort replaces the Protection Unit of a traditional protection model. &#13;
The ForwardingConstruct can be considered as a component and the FcPort as a Port on that component.</title>
</rect>
<rect x="703" y="380" fill-opacity="0" width="40" title="The FcSwitch class models the switched forwarding of traffic (traffic flow) between FcPorts and is present where there is protection functionality in the FC. &#13;&#10;If an FC exposes protection (having two or more FcPorts that provide alternative identical inputs/outputs), the FC will have one or more associated FcSwitch objects to represent the alternative flow choices visible at the edge of the FC.&#13;&#10;The FC switch represents and defines a protection switch structure encapsulated in the FC and essentially &quot;decorates&quot; FCs that are involved in resilience schemes that use switching in a protection mechanism. &#13;&#10;Essentially FcSwitch performs one of the functions of the Protection Group in a traditional model. It associates 2 or more FcPorts each playing the role of a Protection Unit. &#13;&#10;One or more protection, i.e. standby/backup, FcPorts provide protection for one or more working (i.e. regular/main/preferred) FcPorts where either protection or working can feed one or more protected FcPort.&#13;&#10;The switch may be used in revertive or non-revertive (symmetric) mode. When in revertive mode it may define a waitToRestore time.&#13;&#10;It may be used in one of several modes including source switched, destination switched, source and destination switched etc. (covering cases such as 1+1 and 1:1).&#13;&#10;It may be locked out (prevented from switching), force switched or manual switched.&#13;&#10;It will indicate switch state and change of state.&#13;&#10;The switch can be switched away from all sources such that it becomes open and hence two coordinated switches can both feed the same LTP so long as at least one of the two is switched away from all sources (is &quot;open&quot;).&#13;&#10;The ability for a Switch to be &quot;high impedance&quot; allows bidirectional ForwardingConstructs to be overlaid on the same bidirectional LTP where the appropriate control is enabled to prevent signal conflict.&#13;&#10;This ability allows multiple alternate routes to be present that otherwise would be in conflict." id="FcSwitch" height="70" stroke-opacity="0">
<title>The FcSwitch class models the switched forwarding of traffic (traffic flow) between FcPorts and is present where there is protection functionality in the FC. &#13;
If an FC exposes protection (having two or more FcPorts that provide alternative identical inputs/outputs), the FC will have one or more associated FcSwitch objects to represent the alternative flow choices visible at the edge of the FC.&#13;
The FC switch represents and defines a protection switch structure encapsulated in the FC and essentially "decorates" FCs that are involved in resilience schemes that use switching in a protection mechanism. &#13;
Essentially FcSwitch performs one of the functions of the Protection Group in a traditional model. It associates 2 or more FcPorts each playing the role of a Protection Unit. &#13;
One or more protection, i.e. standby/backup, FcPorts provide protection for one or more working (i.e. regular/main/preferred) FcPorts where either protection or working can feed one or more protected FcPort.&#13;
The switch may be used in revertive or non-revertive (symmetric) mode. When in revertive mode it may define a waitToRestore time.&#13;
It may be used in one of several modes including source switched, destination switched, source and destination switched etc. (covering cases such as 1+1 and 1:1).&#13;
It may be locked out (prevented from switching), force switched or manual switched.&#13;
It will indicate switch state and change of state.&#13;
The switch can be switched away from all sources such that it becomes open and hence two coordinated switches can both feed the same LTP so long as at least one of the two is switched away from all sources (is "open").&#13;
The ability for a Switch to be "high impedance" allows bidirectional ForwardingConstructs to be overlaid on the same bidirectional LTP where the appropriate control is enabled to prevent signal conflict.&#13;
This ability allows multiple alternate routes to be present that otherwise would be in conflict.</title>
</rect>
<rect x="83" y="380" fill-opacity="0" width="40" title="The projection of an LTP into each transport layer is represented by a LayerProtocol (LP) instance. A LayerProtocol instance can be used for controlling termination and monitoring functionality. &#13;&#10;It can also be used for controlling the adaptation (i.e. encapsulation and/or multiplexing of client signal), tandem connection monitoring, traffic conditioning and/or shaping functionality at an intermediate point along a connection. &#13;&#10;Where the client – server relationship is fixed 1:1 and immutable, the layers can be encapsulated in a single LTP instance. Where there is a n:1 relationship between client and server, the layers must be split over two separate instances of LTP. " id="LayerProtocol" height="51" stroke-opacity="0">
<title>The projection of an LTP into each transport layer is represented by a LayerProtocol (LP) instance. A LayerProtocol instance can be used for controlling termination and monitoring functionality. &#13;
It can also be used for controlling the adaptation (i.e. encapsulation and/or multiplexing of client signal), tandem connection monitoring, traffic conditioning and/or shaping functionality at an intermediate point along a connection. &#13;
Where the client – server relationship is fixed 1:1 and immutable, the layers can be encapsulated in a single LTP instance. Where there is a n:1 relationship between client and server, the layers must be split over two separate instances of LTP. </title>
</rect>
<rect x="568" y="10" fill-opacity="0" width="40" title="The Network Element (NE) class represents a network element (traditional NE) in the data plane.&#13;&#10;A data plane network element is essentially a consolidation of capabilities that can be viewed and controlled through a &quot;single&quot; management-control port.&#13;&#10;In the direct interface from an SDN controller to a network element in the data plane, the NetworkElement object defines the scope of control for the resources within the network element&#13;&#10;For example internal transfer of user information between the external terminations (ports of the NE), encapsulation, multiplexing/demultiplexing, and OAM functions, etc. &#13;&#10;The NetworkElement provides the scope of the naming space for identifying objects representing the resources within the data plane network element.&#13;&#10;&#13;&#10;NE is really a product bundling or some view of management scope, management access, session. &#13;&#10;The NE is not directly part of topology but brings meaning to the FD context and the LTP context (and hence the links). " id="NetworkElement" height="61" stroke-opacity="0">
<title>The Network Element (NE) class represents a network element (traditional NE) in the data plane.&#13;
A data plane network element is essentially a consolidation of capabilities that can be viewed and controlled through a "single" management-control port.&#13;
In the direct interface from an SDN controller to a network element in the data plane, the NetworkElement object defines the scope of control for the resources within the network element&#13;
For example internal transfer of user information between the external terminations (ports of the NE), encapsulation, multiplexing/demultiplexing, and OAM functions, etc. &#13;
The NetworkElement provides the scope of the naming space for identifying objects representing the resources within the data plane network element.&#13;
&#13;
NE is really a product bundling or some view of management scope, management access, session. &#13;
The NE is not directly part of topology but brings meaning to the FD context and the LTP context (and hence the links). </title>
</rect>
</svg>
