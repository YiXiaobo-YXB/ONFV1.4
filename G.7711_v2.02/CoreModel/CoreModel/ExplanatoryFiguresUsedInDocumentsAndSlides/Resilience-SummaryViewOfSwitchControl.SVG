<?xml version="1.0" encoding="UTF-8"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" stroke-dasharray="none" shape-rendering="auto" font-family="'Dialog'" width="1246" text-rendering="auto" fill-opacity="1" contentScriptType="text/ecmascript" color-interpolation="auto" color-rendering="auto" preserveAspectRatio="xMidYMid meet" font-size="12" viewBox="0 0 1246 787" fill="black" stroke="black" image-rendering="auto" stroke-miterlimit="10" zoomAndPan="magnify" version="1.0" stroke-linecap="square" stroke-linejoin="miter" contentStyleType="text/css" font-style="normal" height="787" stroke-width="1" stroke-dashoffset="0" font-weight="normal" stroke-opacity="1">
<!--Generated by the Batik Graphics2D SVG Generator-->
<defs id="genericDefs"/>
<g>
<defs id="defs1">
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath1">
<path d="M22 22 L64 22 L64 64 L22 64 L22 22 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath2">
<path d="M464 154 L800 154 L800 184 L464 184 L464 154 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath3">
<path d="M-1 -1 L1247 -1 L1247 788 L-1 788 L-1 -1 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath4">
<path d="M332 429 L668 429 L668 459 L332 459 L332 429 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath5">
<path d="M888 371 L1224 371 L1224 401 L888 401 L888 371 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath6">
<path d="M457 411 L793 411 L793 441 L457 441 L457 411 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath7">
<path d="M671 105 L1007 105 L1007 135 L671 135 L671 105 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath8">
<path d="M403 672 L739 672 L739 702 L403 702 L403 672 Z"/>
</clipPath>
</defs>
<g font-size="21" fill="rgb(255,203,203)" font-family="'Segoe UI'" stroke-linejoin="round" stroke="rgb(255,203,203)" stroke-width="0" stroke-miterlimit="0">
<rect width="186" x="480" height="91" y="235" stroke="none"/>
</g>
<g font-size="21" font-family="'Segoe UI'" stroke-linecap="butt">
<rect fill="none" width="185" x="480" height="90" y="235"/>
<text xml:space="preserve" x="405" y="288" stroke="none">Invalid view - remove from diagram.</text>
<rect x="483" y="562" fill="rgb(255,203,203)" width="181" height="75" stroke="none"/>
<rect x="483" y="562" fill="none" width="180" height="74" stroke-width="0.1"/>
<text xml:space="preserve" x="406" stroke-width="0.1" y="607" stroke="none">Invalid view - remove from diagram.</text>
<rect x="463" y="28" fill="rgb(255,203,203)" width="323" height="76" stroke="none" stroke-width="0.1"/>
<rect x="463" y="28" fill="none" width="322" height="75" stroke-width="0.1"/>
<text xml:space="preserve" x="457" stroke-width="0.1" y="73" stroke="none">Invalid view - remove from diagram.</text>
<rect x="682" y="412" fill="rgb(255,203,203)" width="351" height="40" stroke="none" stroke-width="0.1"/>
<rect x="682" y="412" fill="none" width="350" height="39" stroke-width="0.1"/>
<text xml:space="preserve" x="690" stroke-width="0.1" y="439" stroke="none">Invalid view - remove from diagram.</text>
<rect x="443" y="737" fill="rgb(255,203,203)" width="256" height="40" stroke="none" stroke-width="0.1"/>
<rect x="443" y="737" fill="none" width="255" height="39" stroke-width="0.1"/>
<text xml:space="preserve" x="403" stroke-width="0.1" y="764" stroke="none">Invalid view - remove from diagram.</text>
<line fill="none" x1="716" x2="716" y1="104" y2="169" stroke="red" stroke-width="1.1"/>
<line fill="none" x1="716" x2="550" y1="169" y2="169" stroke="red" stroke-width="1.1"/>
<line fill="none" x1="550" x2="550" y1="169" y2="235" stroke="red" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-125" y="50" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="465" y="178" clip-path="url(#clipPath2)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="483" x2="483" y1="326" y2="444" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="483" x2="517" y1="444" y2="444" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="517" x2="517" y1="444" y2="562" stroke="red" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-125" y="50" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="333" y="453" clip-path="url(#clipPath4)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="786" x2="1056" y1="47" y2="47" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="1056" x2="1056" y1="47" y2="603" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="1056" x2="664" y1="603" y2="603" stroke="red" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-125" y="50" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="889" y="395" clip-path="url(#clipPath5)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="625" x2="625" y1="326" y2="438" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="625" x2="612" y1="438" y2="438" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="612" x2="612" y1="438" y2="442" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="612" x2="682" y1="442" y2="442" stroke="red" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-125" y="50" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="458" y="435" clip-path="url(#clipPath6)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="786" x2="919" y1="41" y2="41" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="919" x2="919" y1="41" y2="92" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="919" x2="839" y1="92" y2="92" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="839" x2="839" y1="92" y2="412" stroke="red" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-125" y="50" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="672" y="129" clip-path="url(#clipPath7)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="571" x2="571" y1="637" y2="737" stroke="red" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="23" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="-125" y="50" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="404" y="696" clip-path="url(#clipPath8)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
</g>
</g>
<rect x="480" y="235" fill-opacity="0" width="186" title="The FcSwitch class models the switched forwarding of traffic (traffic flow) between FcPorts and is present where there is protection functionality in the FC. &#13;&#10;If an FC exposes protection (having two or more FcPorts that provide alternative identical inputs/outputs), the FC will have one or more associated FcSwitch objects to represent the alternative flow choices visible at the edge of the FC.&#13;&#10;The FC switch represents and defines a protection switch structure encapsulated in the FC and essentially &quot;decorates&quot; FCs that are involved in resilience schemes that use switching in a protection mechanism. &#13;&#10;Essentially FcSwitch performs one of the functions of the Protection Group in a traditional model. It associates 2 or more FcPorts each playing the role of a Protection Unit. &#13;&#10;One or more protection, i.e. standby/backup, FcPorts provide protection for one or more working (i.e. regular/main/preferred) FcPorts where either protection or working can feed one or more protected FcPort.&#13;&#10;The switch may be used in revertive or non-revertive (symmetric) mode. When in revertive mode it may define a waitToRestore time.&#13;&#10;It may be used in one of several modes including source switched, destination switched, source and destination switched etc. (covering cases such as 1+1 and 1:1).&#13;&#10;It may be locked out (prevented from switching), force switched or manual switched.&#13;&#10;It will indicate switch state and change of state.&#13;&#10;The switch can be switched away from all sources such that it becomes open and hence two coordinated switches can both feed the same LTP so long as at least one of the two is switched away from all sources (is &quot;open&quot;).&#13;&#10;The ability for a Switch to be &quot;high impedance&quot; allows bidirectional ForwardingConstructs to be overlaid on the same bidirectional LTP where the appropriate control is enabled to prevent signal conflict.&#13;&#10;This ability allows multiple alternate routes to be present that otherwise would be in conflict." id="FcSwitch" height="91" stroke-opacity="0">
<title>The FcSwitch class models the switched forwarding of traffic (traffic flow) between FcPorts and is present where there is protection functionality in the FC. &#13;
If an FC exposes protection (having two or more FcPorts that provide alternative identical inputs/outputs), the FC will have one or more associated FcSwitch objects to represent the alternative flow choices visible at the edge of the FC.&#13;
The FC switch represents and defines a protection switch structure encapsulated in the FC and essentially "decorates" FCs that are involved in resilience schemes that use switching in a protection mechanism. &#13;
Essentially FcSwitch performs one of the functions of the Protection Group in a traditional model. It associates 2 or more FcPorts each playing the role of a Protection Unit. &#13;
One or more protection, i.e. standby/backup, FcPorts provide protection for one or more working (i.e. regular/main/preferred) FcPorts where either protection or working can feed one or more protected FcPort.&#13;
The switch may be used in revertive or non-revertive (symmetric) mode. When in revertive mode it may define a waitToRestore time.&#13;
It may be used in one of several modes including source switched, destination switched, source and destination switched etc. (covering cases such as 1+1 and 1:1).&#13;
It may be locked out (prevented from switching), force switched or manual switched.&#13;
It will indicate switch state and change of state.&#13;
The switch can be switched away from all sources such that it becomes open and hence two coordinated switches can both feed the same LTP so long as at least one of the two is switched away from all sources (is "open").&#13;
The ability for a Switch to be "high impedance" allows bidirectional ForwardingConstructs to be overlaid on the same bidirectional LTP where the appropriate control is enabled to prevent signal conflict.&#13;
This ability allows multiple alternate routes to be present that otherwise would be in conflict.</title>
</rect>
<rect x="483" y="562" fill-opacity="0" width="181" title="The association of the FC to LTPs is always made via FcPorts.&#13;&#10;In the case of media the association between FCs is made via their FcPorts and the association of an FC to the physical Pin is made via the FcPort.&#13;&#10;The FcPort class models the access to the FC function. &#13;&#10;The traffic forwarding between the associated FcPorts of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  &#13;&#10;In cases where there is resilience, the FcPort may convey the resilience role of the access to the FC. &#13;&#10;It can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.&#13;&#10;The FcPort replaces the Protection Unit of a traditional protection model. &#13;&#10;The ForwardingConstruct can be considered as a component and the FcPort as a Port on that component." id="FcPort" height="75" stroke-opacity="0">
<title>The association of the FC to LTPs is always made via FcPorts.&#13;
In the case of media the association between FCs is made via their FcPorts and the association of an FC to the physical Pin is made via the FcPort.&#13;
The FcPort class models the access to the FC function. &#13;
The traffic forwarding between the associated FcPorts of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  &#13;
In cases where there is resilience, the FcPort may convey the resilience role of the access to the FC. &#13;
It can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.&#13;
The FcPort replaces the Protection Unit of a traditional protection model. &#13;
The ForwardingConstruct can be considered as a component and the FcPort as a Port on that component.</title>
</rect>
<rect x="463" y="28" fill-opacity="0" width="323" title="The ForwardingConstruct (FC) class models enabled constrained potential for forwarding between two or more FcPorts at a particular specific layerProtocol .&#13;&#10;Like the LTP, the FC supports any transport protocol including all analogue, circuit and packet forms.&#13;&#10;For digital layer networks it is used to effect forwarding of transport characteristic (layer protocol) information.&#13;&#10;An FC can be in only one ForwardingDomain (FD).&#13;&#10;The FC is a forwarding entity.&#13;&#10;At a low level of the recursion, a FC represents a cross-connection within an NE. It may also represent a fragment of a cross-connection under certain circumstances.&#13;&#10;The FC object can be used to represent many different structures including point-to-point (P2P), point-to-multipoint (P2MP), rooted-multipoint (RMP) and multipoint-to-multipoint (MP2MP) bridge and selector structures for linear, ring or mesh protection schemes.&#13;&#10;When applied to media, the FC represents the ability for a flow/wave (potentially containing information), to be propagated between FcPorts. &#13;&#10;The existence of a FC instance is independent of the presence (or absence) of a flow/wave (and any information encoded within it).  &#13;&#10;A flow/wave cannot propagate in the absence of a FC instance." id="ForwardingConstruct" height="76" stroke-opacity="0">
<title>The ForwardingConstruct (FC) class models enabled constrained potential for forwarding between two or more FcPorts at a particular specific layerProtocol .&#13;
Like the LTP, the FC supports any transport protocol including all analogue, circuit and packet forms.&#13;
For digital layer networks it is used to effect forwarding of transport characteristic (layer protocol) information.&#13;
An FC can be in only one ForwardingDomain (FD).&#13;
The FC is a forwarding entity.&#13;
At a low level of the recursion, a FC represents a cross-connection within an NE. It may also represent a fragment of a cross-connection under certain circumstances.&#13;
The FC object can be used to represent many different structures including point-to-point (P2P), point-to-multipoint (P2MP), rooted-multipoint (RMP) and multipoint-to-multipoint (MP2MP) bridge and selector structures for linear, ring or mesh protection schemes.&#13;
When applied to media, the FC represents the ability for a flow/wave (potentially containing information), to be propagated between FcPorts. &#13;
The existence of a FC instance is independent of the presence (or absence) of a flow/wave (and any information encoded within it).  &#13;
A flow/wave cannot propagate in the absence of a FC instance.</title>
</rect>
<rect x="682" y="412" fill-opacity="0" width="351" title="Represents the capability to control and coordinate switches, to add/delete/modify FCs and to add/delete/modify LTPs/LPs so as to realize a protection scheme." id="ConfigurationAndSwitchControl" height="40" stroke-opacity="0">
<title>Represents the capability to control and coordinate switches, to add/delete/modify FCs and to add/delete/modify LTPs/LPs so as to realize a protection scheme.</title>
</rect>
<rect x="443" y="737" fill-opacity="0" width="256" title="The LogicalTerminationPoint (LTP) class encapsulates the termination and adaptation functions of one or more transport layers represented by instances of LayerProtocol.&#13;&#10;The encapsulated transport layers have a simple fixed 1:1 client-server relationship defined by association end ordering.&#13;&#10;The structure of LTP supports all transport protocols including circuit and packet forms." id="LogicalTerminationPoint" height="40" stroke-opacity="0">
<title>The LogicalTerminationPoint (LTP) class encapsulates the termination and adaptation functions of one or more transport layers represented by instances of LayerProtocol.&#13;
The encapsulated transport layers have a simple fixed 1:1 client-server relationship defined by association end ordering.&#13;
The structure of LTP supports all transport protocols including circuit and packet forms.</title>
</rect>
</svg>
