<?xml version="1.0" encoding="UTF-8"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" stroke-dasharray="none" shape-rendering="auto" font-family="'Dialog'" width="603" text-rendering="auto" fill-opacity="1" contentScriptType="text/ecmascript" color-interpolation="auto" color-rendering="auto" preserveAspectRatio="xMidYMid meet" font-size="12" viewBox="0 0 603 351" fill="black" stroke="black" image-rendering="auto" stroke-miterlimit="10" zoomAndPan="magnify" version="1.0" stroke-linecap="square" stroke-linejoin="miter" contentStyleType="text/css" font-style="normal" height="351" stroke-width="1" stroke-dashoffset="0" font-weight="normal" stroke-opacity="1">
<!--Generated by the Batik Graphics2D SVG Generator-->
<defs id="genericDefs"/>
<g>
<defs id="defs1">
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath1">
<path d="M89 50 L131 50 L131 92 L89 92 L89 50 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath2">
<path d="M223 22 L417 22 L417 40 L223 40 L223 22 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath3">
<path d="M-1 -1 L604 -1 L604 352 L-1 352 L-1 -1 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath4">
<path d="M387 132 L581 132 L581 150 L387 150 L387 132 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath5">
<path d="M142 108 L336 108 L336 126 L142 126 L142 108 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath6">
<path d="M245 208 L439 208 L439 226 L245 226 L245 208 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath7">
<path d="M281 231 L475 231 L475 249 L281 249 L281 231 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath8">
<path d="M22 297 L216 297 L216 315 L22 315 L22 297 Z"/>
</clipPath>
</defs>
<g fill="rgb(255,203,203)" font-family="'Segoe UI'" stroke-linejoin="round" stroke="rgb(255,203,203)" stroke-width="0" stroke-miterlimit="0">
<rect width="40" x="305" height="76" y="86" stroke="none"/>
</g>
<g stroke-linecap="butt" font-family="'Segoe UI'">
<rect fill="none" width="39" x="305" height="75" y="86"/>
<text xml:space="preserve" x="228" y="129" stroke="none">Invalid view - remove from diagram.</text>
<rect x="523" y="209" fill="rgb(255,203,203)" width="40" height="63" stroke="none"/>
<rect x="523" y="209" fill="none" width="39" height="62" stroke-width="0.1"/>
<text xml:space="preserve" x="446" stroke-width="0.1" y="246" stroke="none">Invalid view - remove from diagram.</text>
<rect x="42" y="86" fill="rgb(255,203,203)" width="131" height="56" stroke="none" stroke-width="0.1"/>
<rect x="42" y="86" fill="none" width="130" height="55" stroke-width="0.1"/>
<text xml:space="preserve" x="11" stroke-width="0.1" y="119" stroke="none">Invalid view - remove from diagram.</text>
<rect x="296" y="271" fill="rgb(255,203,203)" width="132" height="70" stroke="none" stroke-width="0.1"/>
<rect x="296" y="271" fill="none" width="131" height="69" stroke-width="0.1"/>
<text xml:space="preserve" x="265" stroke-width="0.1" y="311" stroke="none">Invalid view - remove from diagram.</text>
<line fill="none" x1="315" x2="315" y1="86" y2="31" stroke="red" stroke-width="1.1"/>
<line fill="none" x1="315" x2="325" y1="31" y2="31" stroke="red" stroke-width="1.1"/>
<line fill="none" x1="325" x2="325" y1="31" y2="86" stroke="red" stroke-width="1.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="224" y="36" clip-path="url(#clipPath2)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="345" x2="498" y1="141" y2="141" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="498" x2="498" y1="141" y2="240" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="498" x2="523" y1="240" y2="240" stroke="red" stroke-width="1.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="388" y="146" clip-path="url(#clipPath4)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="305" x2="239" y1="122" y2="122" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="239" x2="239" y1="122" y2="113" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="239" x2="173" y1="113" y2="113" stroke="red" stroke-width="1.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="143" y="122" clip-path="url(#clipPath5)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="342" x2="342" y1="162" y2="271" stroke="red" stroke-width="1.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="246" y="222" clip-path="url(#clipPath6)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="523" x2="378" y1="245" y2="245" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="378" x2="378" y1="245" y2="124" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="378" x2="345" y1="124" y2="124" stroke="red" stroke-width="1.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="282" y="245" clip-path="url(#clipPath7)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="296" x2="107" y1="306" y2="306" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="107" x2="107" y1="306" y2="142" stroke="red" stroke-width="1.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="90" y="51" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="13" y="76" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="23" y="311" clip-path="url(#clipPath8)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
</g>
</g>
<rect x="305" y="86" fill-opacity="0" width="40" title="The ForwardingConstruct (FC) class models enabled constrained potential for forwarding between two or more FcPorts at a particular specific layerProtocol .&#13;&#10;Like the LTP, the FC supports any transport protocol including all analogue, circuit and packet forms.&#13;&#10;For digital layer networks it is used to effect forwarding of transport characteristic (layer protocol) information.&#13;&#10;An FC can be in only one ForwardingDomain (FD).&#13;&#10;The FC is a forwarding entity.&#13;&#10;At a low level of the recursion, a FC represents a cross-connection within an NE. It may also represent a fragment of a cross-connection under certain circumstances.&#13;&#10;The FC object can be used to represent many different structures including point-to-point (P2P), point-to-multipoint (P2MP), rooted-multipoint (RMP) and multipoint-to-multipoint (MP2MP) bridge and selector structures for linear, ring or mesh protection schemes.&#13;&#10;When applied to media, the FC represents the ability for a flow/wave (potentially containing information), to be propagated between FcPorts. &#13;&#10;The existence of a FC instance is independent of the presence (or absence) of a flow/wave (and any information encoded within it).  &#13;&#10;A flow/wave cannot propagate in the absence of a FC instance." id="ForwardingConstruct" height="76" stroke-opacity="0">
<title>The ForwardingConstruct (FC) class models enabled constrained potential for forwarding between two or more FcPorts at a particular specific layerProtocol .&#13;
Like the LTP, the FC supports any transport protocol including all analogue, circuit and packet forms.&#13;
For digital layer networks it is used to effect forwarding of transport characteristic (layer protocol) information.&#13;
An FC can be in only one ForwardingDomain (FD).&#13;
The FC is a forwarding entity.&#13;
At a low level of the recursion, a FC represents a cross-connection within an NE. It may also represent a fragment of a cross-connection under certain circumstances.&#13;
The FC object can be used to represent many different structures including point-to-point (P2P), point-to-multipoint (P2MP), rooted-multipoint (RMP) and multipoint-to-multipoint (MP2MP) bridge and selector structures for linear, ring or mesh protection schemes.&#13;
When applied to media, the FC represents the ability for a flow/wave (potentially containing information), to be propagated between FcPorts. &#13;
The existence of a FC instance is independent of the presence (or absence) of a flow/wave (and any information encoded within it).  &#13;
A flow/wave cannot propagate in the absence of a FC instance.</title>
</rect>
<rect x="523" y="209" fill-opacity="0" width="40" title="Each instance of an FC Route (FcRoute) class models an individual route of an FC. The route is an alternative view of the internal structure of the FC to FC aggregation (see FcHasLowerLeverFcs association).&#13;&#10;There are cases where a route is the most appropriate representation and cases where the aggregation approach is the most appropriate representation.&#13;&#10;The route of an FC object is represented by a list of FCs at a lower level with the implicit understanding that unmodeled link connections are interleaved between the lower level FCs. &#13;&#10;Note that depending on the service supported by an FC, the FC can have multiple routes.&#13;&#10;The FcRoute is also applicable where an NE level ForwardingDomain may be decomposed into subordinate ForwardingDomains. Applies to both virtual and real NE cases." id="FcRoute" height="63" stroke-opacity="0">
<title>Each instance of an FC Route (FcRoute) class models an individual route of an FC. The route is an alternative view of the internal structure of the FC to FC aggregation (see FcHasLowerLeverFcs association).&#13;
There are cases where a route is the most appropriate representation and cases where the aggregation approach is the most appropriate representation.&#13;
The route of an FC object is represented by a list of FCs at a lower level with the implicit understanding that unmodeled link connections are interleaved between the lower level FCs. &#13;
Note that depending on the service supported by an FC, the FC can have multiple routes.&#13;
The FcRoute is also applicable where an NE level ForwardingDomain may be decomposed into subordinate ForwardingDomains. Applies to both virtual and real NE cases.</title>
</rect>
<rect x="42" y="86" fill-opacity="0" width="131" title="The association of the FC to LTPs is always made via FcPorts.&#13;&#10;In the case of media the association between FCs is made via their FcPorts and the association of an FC to the physical Pin is made via the FcPort.&#13;&#10;The FcPort class models the access to the FC function. &#13;&#10;The traffic forwarding between the associated FcPorts of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  &#13;&#10;In cases where there is resilience, the FcPort may convey the resilience role of the access to the FC. &#13;&#10;It can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.&#13;&#10;The FcPort replaces the Protection Unit of a traditional protection model. &#13;&#10;The ForwardingConstruct can be considered as a component and the FcPort as a Port on that component." id="FcPort" height="56" stroke-opacity="0">
<title>The association of the FC to LTPs is always made via FcPorts.&#13;
In the case of media the association between FCs is made via their FcPorts and the association of an FC to the physical Pin is made via the FcPort.&#13;
The FcPort class models the access to the FC function. &#13;
The traffic forwarding between the associated FcPorts of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  &#13;
In cases where there is resilience, the FcPort may convey the resilience role of the access to the FC. &#13;
It can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.&#13;
The FcPort replaces the Protection Unit of a traditional protection model. &#13;
The ForwardingConstruct can be considered as a component and the FcPort as a Port on that component.</title>
</rect>
<rect x="296" y="271" fill-opacity="0" width="132" title="The FcSwitch class models the switched forwarding of traffic (traffic flow) between FcPorts and is present where there is protection functionality in the FC. &#13;&#10;If an FC exposes protection (having two or more FcPorts that provide alternative identical inputs/outputs), the FC will have one or more associated FcSwitch objects to represent the alternative flow choices visible at the edge of the FC.&#13;&#10;The FC switch represents and defines a protection switch structure encapsulated in the FC and essentially &quot;decorates&quot; FCs that are involved in resilience schemes that use switching in a protection mechanism. &#13;&#10;Essentially FcSwitch performs one of the functions of the Protection Group in a traditional model. It associates 2 or more FcPorts each playing the role of a Protection Unit. &#13;&#10;One or more protection, i.e. standby/backup, FcPorts provide protection for one or more working (i.e. regular/main/preferred) FcPorts where either protection or working can feed one or more protected FcPort.&#13;&#10;The switch may be used in revertive or non-revertive (symmetric) mode. When in revertive mode it may define a waitToRestore time.&#13;&#10;It may be used in one of several modes including source switched, destination switched, source and destination switched etc. (covering cases such as 1+1 and 1:1).&#13;&#10;It may be locked out (prevented from switching), force switched or manual switched.&#13;&#10;It will indicate switch state and change of state.&#13;&#10;The switch can be switched away from all sources such that it becomes open and hence two coordinated switches can both feed the same LTP so long as at least one of the two is switched away from all sources (is &quot;open&quot;).&#13;&#10;The ability for a Switch to be &quot;high impedance&quot; allows bidirectional ForwardingConstructs to be overlaid on the same bidirectional LTP where the appropriate control is enabled to prevent signal conflict.&#13;&#10;This ability allows multiple alternate routes to be present that otherwise would be in conflict." id="FcSwitch" height="70" stroke-opacity="0">
<title>The FcSwitch class models the switched forwarding of traffic (traffic flow) between FcPorts and is present where there is protection functionality in the FC. &#13;
If an FC exposes protection (having two or more FcPorts that provide alternative identical inputs/outputs), the FC will have one or more associated FcSwitch objects to represent the alternative flow choices visible at the edge of the FC.&#13;
The FC switch represents and defines a protection switch structure encapsulated in the FC and essentially "decorates" FCs that are involved in resilience schemes that use switching in a protection mechanism. &#13;
Essentially FcSwitch performs one of the functions of the Protection Group in a traditional model. It associates 2 or more FcPorts each playing the role of a Protection Unit. &#13;
One or more protection, i.e. standby/backup, FcPorts provide protection for one or more working (i.e. regular/main/preferred) FcPorts where either protection or working can feed one or more protected FcPort.&#13;
The switch may be used in revertive or non-revertive (symmetric) mode. When in revertive mode it may define a waitToRestore time.&#13;
It may be used in one of several modes including source switched, destination switched, source and destination switched etc. (covering cases such as 1+1 and 1:1).&#13;
It may be locked out (prevented from switching), force switched or manual switched.&#13;
It will indicate switch state and change of state.&#13;
The switch can be switched away from all sources such that it becomes open and hence two coordinated switches can both feed the same LTP so long as at least one of the two is switched away from all sources (is "open").&#13;
The ability for a Switch to be "high impedance" allows bidirectional ForwardingConstructs to be overlaid on the same bidirectional LTP where the appropriate control is enabled to prevent signal conflict.&#13;
This ability allows multiple alternate routes to be present that otherwise would be in conflict.</title>
</rect>
</svg>
