<?xml version="1.0" encoding="UTF-8"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" stroke-dasharray="none" shape-rendering="auto" font-family="'Dialog'" width="841" text-rendering="auto" fill-opacity="1" contentScriptType="text/ecmascript" color-interpolation="auto" color-rendering="auto" preserveAspectRatio="xMidYMid meet" font-size="12" viewBox="0 0 841 939" fill="black" stroke="black" image-rendering="auto" stroke-miterlimit="10" zoomAndPan="magnify" version="1.0" stroke-linecap="square" stroke-linejoin="miter" contentStyleType="text/css" font-style="normal" height="939" stroke-width="1" stroke-dashoffset="0" font-weight="normal" stroke-opacity="1">
<!--Generated by the Batik Graphics2D SVG Generator-->
<defs id="genericDefs"/>
<g>
<defs id="defs1">
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath1">
<path d="M194 22 L236 22 L236 64 L194 64 L194 22 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath2">
<path d="M38 594 L232 594 L232 612 L38 612 L38 594 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath3">
<path d="M-1 -1 L842 -1 L842 940 L-1 940 L-1 -1 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath4">
<path d="M295 861 L489 861 L489 879 L295 879 L295 861 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath5">
<path d="M322 492 L516 492 L516 510 L322 510 L322 492 Z"/>
</clipPath>
<clipPath clipPathUnits="userSpaceOnUse" id="clipPath6">
<path d="M228 751 L422 751 L422 769 L228 769 L228 751 Z"/>
</clipPath>
</defs>
<g fill="rgb(255,203,203)" font-family="'Segoe UI'" stroke-linejoin="round" stroke="rgb(255,203,203)" stroke-width="0" stroke-miterlimit="0">
<rect width="236" x="595" height="76" y="583" stroke="none"/>
</g>
<g stroke-linecap="butt" font-family="'Segoe UI'">
<rect fill="none" width="235" x="595" height="75" y="583"/>
<text xml:space="preserve" x="616" y="626" stroke="none">Invalid view - remove from diagram.</text>
<rect x="10" y="778" fill="rgb(255,203,203)" width="285" height="136" stroke="none"/>
<rect x="10" y="778" fill="none" width="284" height="135" stroke-width="0.1"/>
<text xml:space="preserve" x="56" stroke-width="0.1" y="851" stroke="none">Invalid view - remove from diagram.</text>
<rect x="490" y="873" fill="rgb(255,203,203)" width="40" height="56" stroke="none" stroke-width="0.1"/>
<rect x="490" y="873" fill="none" width="39" height="55" stroke-width="0.1"/>
<text xml:space="preserve" x="413" stroke-width="0.1" y="906" stroke="none">Invalid view - remove from diagram.</text>
<rect x="205" y="633" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="205" y="633" fill="none" width="39" height="39" stroke-width="0.1"/>
<text xml:space="preserve" x="128" stroke-width="0.1" y="658" stroke="none">Invalid view - remove from diagram.</text>
<rect x="435" y="733" fill="rgb(255,203,203)" width="296" height="40" stroke="none" stroke-width="0.1"/>
<rect x="435" y="733" fill="none" width="295" height="39" stroke-width="0.1"/>
<text xml:space="preserve" x="486" stroke-width="0.1" y="758" stroke="none">Invalid view - remove from diagram.</text>
<line fill="none" x1="595" x2="112" y1="603" y2="603" stroke="red" stroke-width="1.1"/>
<line fill="none" x1="112" x2="112" y1="603" y2="490" stroke="red" stroke-width="1.1"/>
<line fill="none" x1="112" x2="148" y1="490" y2="490" stroke="red" stroke-width="1.1"/>
<line fill="none" x1="148" x2="148" y1="490" y2="778" stroke="red" stroke-width="1.1"/>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="118" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="118" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="118" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="118" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="39" y="608" clip-path="url(#clipPath2)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="490" x2="392" y1="895" y2="895" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="392" x2="392" y1="895" y2="845" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="392" x2="295" y1="845" y2="845" stroke="red" stroke-width="1.1"/>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="1.1"/>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="118" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="118" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="118" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="rgb(255,203,203)" width="40" height="40" stroke="none" stroke-width="0.1"/>
<rect x="195" y="23" clip-path="url(#clipPath1)" fill="none" width="39" height="39" stroke-width="0.1"/>
<text x="118" y="48" clip-path="url(#clipPath1)" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<text x="296" y="875" clip-path="url(#clipPath4)" fill="red" stroke="none" stroke-width="0.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="245" x2="419" y1="660" y2="660" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="419" x2="419" y1="660" y2="455" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="419" x2="281" y1="455" y2="455" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="281" x2="281" y1="455" y2="603" stroke="red" stroke-width="1.1"/>
<text x="323" y="506" clip-path="url(#clipPath5)" fill="red" stroke="none" stroke-width="1.1" xml:space="preserve">Invalid view - remove from diagram.</text>
<line clip-path="url(#clipPath3)" fill="none" x1="435" x2="395" y1="765" y2="765" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="395" x2="395" y1="765" y2="760" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="395" x2="295" y1="760" y2="760" stroke="red" stroke-width="1.1"/>
<line clip-path="url(#clipPath3)" fill="none" x1="295" x2="295" y1="760" y2="845" stroke="red" stroke-width="1.1"/>
<text x="229" y="765" clip-path="url(#clipPath6)" fill="red" stroke="none" stroke-width="1.1" xml:space="preserve">Invalid view - remove from diagram.</text>
</g>
</g>
<rect x="595" y="583" fill-opacity="0" width="236" title="The ForwardingDomain (FD) class models the topological component that represents a forwarding capability that provides the opportunity to enable forwarding (of specific transport characteristic information at one or more protocol layers) between points.&#13;&#10;The FD object provides the context for and constrains the formation, adjustment and removal of FCs and hence offers the potential to enable forwarding.&#13;&#10;The FCs may be formed between LTPs at the boundary of the FD or between physical ports at the boundary of the FD (for media layers).&#13;&#10;A number of FDs (related by Links) may be grouped and abstracted to form an FD where that FD represents the effect of the underlying FDs but where the detailed structure is not apparent.&#13;&#10;This grouping and abstraction is potentially recursive.&#13;&#10;An FD represents an abstraction of some combination of software behavior, electronic behavior and physical structure that provides a forwarding capability. &#13;&#10;At a lower level of recursion an FD could represent a forwarding capability within a device. &#13;&#10;A device may encompass two or more disjoint forwarding capabilities and may support more than one layer protocol, hence more than one FD.&#13;&#10;A routing fabric may be logically partitioned to represent connectivity constraints, hence the FD representing the routing fabric may be partitioned into a number of FDs representing the constraints.&#13;&#10;The FD represents a subnetwork [ITU-T G.800], FlowDomain [TMF 612] and a MultiLayerSubNetwork (MLSN) [TMF 612]. &#13;&#10;As in the TMF concept of MLSN the FD can support more than one layer-protocol.&#13;&#10;Note that the ITU-T G.800 subnetwork is a single layer entity." id="ForwardingDomain" height="76" stroke-opacity="0">
<title>The ForwardingDomain (FD) class models the topological component that represents a forwarding capability that provides the opportunity to enable forwarding (of specific transport characteristic information at one or more protocol layers) between points.&#13;
The FD object provides the context for and constrains the formation, adjustment and removal of FCs and hence offers the potential to enable forwarding.&#13;
The FCs may be formed between LTPs at the boundary of the FD or between physical ports at the boundary of the FD (for media layers).&#13;
A number of FDs (related by Links) may be grouped and abstracted to form an FD where that FD represents the effect of the underlying FDs but where the detailed structure is not apparent.&#13;
This grouping and abstraction is potentially recursive.&#13;
An FD represents an abstraction of some combination of software behavior, electronic behavior and physical structure that provides a forwarding capability. &#13;
At a lower level of recursion an FD could represent a forwarding capability within a device. &#13;
A device may encompass two or more disjoint forwarding capabilities and may support more than one layer protocol, hence more than one FD.&#13;
A routing fabric may be logically partitioned to represent connectivity constraints, hence the FD representing the routing fabric may be partitioned into a number of FDs representing the constraints.&#13;
The FD represents a subnetwork [ITU-T G.800], FlowDomain [TMF 612] and a MultiLayerSubNetwork (MLSN) [TMF 612]. &#13;
As in the TMF concept of MLSN the FD can support more than one layer-protocol.&#13;
Note that the ITU-T G.800 subnetwork is a single layer entity.</title>
</rect>
<rect x="10" y="778" fill-opacity="0" width="285" title="The LogicalTerminationPoint (LTP) class encapsulates the termination and adaptation functions of one or more transport layers represented by instances of LayerProtocol.&#13;&#10;The encapsulated transport layers have a simple fixed 1:1 client-server relationship defined by association end ordering.&#13;&#10;The structure of LTP supports all transport protocols including circuit and packet forms." id="LogicalTerminationPoint" height="136" stroke-opacity="0">
<title>The LogicalTerminationPoint (LTP) class encapsulates the termination and adaptation functions of one or more transport layers represented by instances of LayerProtocol.&#13;
The encapsulated transport layers have a simple fixed 1:1 client-server relationship defined by association end ordering.&#13;
The structure of LTP supports all transport protocols including circuit and packet forms.</title>
</rect>
<rect x="0" y="0" fill-opacity="0" width="0" title="One or more text labels for the unmodeled physical port associated with the LTP.&#13;&#10;In many cases there is no associated physical port." id="physicalPortReference" height="0" stroke-opacity="0">
<title>One or more text labels for the unmodeled physical port associated with the LTP.&#13;
In many cases there is no associated physical port.</title>
</rect>
<rect x="490" y="873" fill-opacity="0" width="40" title="The association of the FC to LTPs is always made via FcPorts.&#13;&#10;In the case of media the association between FCs is made via their FcPorts and the association of an FC to the physical Pin is made via the FcPort.&#13;&#10;The FcPort class models the access to the FC function. &#13;&#10;The traffic forwarding between the associated FcPorts of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  &#13;&#10;In cases where there is resilience, the FcPort may convey the resilience role of the access to the FC. &#13;&#10;It can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.&#13;&#10;The FcPort replaces the Protection Unit of a traditional protection model. &#13;&#10;The ForwardingConstruct can be considered as a component and the FcPort as a Port on that component." id="FcPort" height="56" stroke-opacity="0">
<title>The association of the FC to LTPs is always made via FcPorts.&#13;
In the case of media the association between FCs is made via their FcPorts and the association of an FC to the physical Pin is made via the FcPort.&#13;
The FcPort class models the access to the FC function. &#13;
The traffic forwarding between the associated FcPorts of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  &#13;
In cases where there is resilience, the FcPort may convey the resilience role of the access to the FC. &#13;
It can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.&#13;
The FcPort replaces the Protection Unit of a traditional protection model. &#13;
The ForwardingConstruct can be considered as a component and the FcPort as a Port on that component.</title>
</rect>
<rect x="205" y="633" fill-opacity="0" width="40" height="40" stroke-opacity="0"/>
<rect x="435" y="733" fill-opacity="0" width="296" height="40" stroke-opacity="0"/>
</svg>
